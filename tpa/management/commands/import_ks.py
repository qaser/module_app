import csv

from django.core.management import BaseCommand

from locations.models import Direction, Station, Structure

LPU = [
    ('Ямбургское ЛПУМГ', 'КС Ямбургская'),
    ('Ныдинское ЛПУМГ', 'КС Ныдинская'),
    ('Ново-Уренгойское ЛПУМГ', 'КС Уренгойская'),
    ('Ново-Уренгойское ЛПУМГ', 'КС Пуровская'),
    ('Пангодинское ЛПУМГ', 'КС Пангодинская'),
    ('Пангодинское ЛПУМГ', 'КС Хасырейская'),
    ('Правохеттинское ЛПУМГ', 'КС Правохеттинская'),
    ('Ягельное ЛПУМГ', 'КС Ягельная'),
    ('Приозерное ЛПУМГ', 'КС Приозерная'),
    ('Надымское ЛПУМГ', 'КС Надымская'),
    ('Лонг-Юганское ЛПУМГ', 'КС Лонг-Юганская'),
    ('Сосновское ЛПУМГ', 'КС Сосновская'),
    ('Сорумское ЛПУМГ', 'КС Сорумская'),
    ('Верхнеказымское ЛПУМГ', 'КС Верхнеказымская'),
    ('Казымское ЛПУМГ', 'КС Казымская'),
    ('Бобровское ЛПУМГ', 'КС Бобровская'),
    ('Октябрьское ЛПУМГ', 'КС Октябрьская'),
    ('Перегребненское ЛПУМГ', 'КС Перегребненская'),
    ('Таежное ЛПУМГ', 'КС Таежная'),
    ('Пунгинское ЛПУМГ', 'КС Пунгинская'),
    ('Сосьвинское ЛПУМГ', 'КС Сосьвинская'),
    ('Уральское ЛПУМГ', 'КС Приполярная'),
    ('Комсомольское ЛПУМГ', 'КС Ужгородская'),
    ('Комсомольское ЛПУМГ', 'КС Узюм-Юганская'),
    ('Комсомольское ЛПУМГ', 'КС Комсомольская'),
    ('Комсомольское ЛПУМГ', 'КС Новокомсомольская'),
    ('Пелымское ЛПУМГ', 'КС Пелымская'),
    ('Пелымское ЛПУМГ', 'КС Ново-Пелымская'),
    ('Ивдельское ЛПУМГ', 'КС Ивдельская'),
    ('Ивдельское ЛПУМГ', 'КС Ново-Ивдельская'),
    ('Краснотурьинское ЛПУМГ', 'КС Краснотурьинская'),
    ('Карпинское ЛПУМГ', 'КС Карпинская'),
    ('Нижнетуринское ЛПУМГ', 'КС Нижнетуринская'),
    ('Нижнетуринское ЛПУМГ', 'КС Лялинская'),
]


class Command(BaseCommand):
    help = 'Update database'

    def handle(self, *args, **options):
        for i, data in enumerate(LPU):
            lpu, ks = data
            if i:
                structure, _ = Structure.objects.get_or_create(
                    structure_type='Филиал'
                )
                direction, _ = Direction.objects.get_or_create(
                    name=lpu,
                    structure=structure
                )
                Station.objects.get_or_create(
                    direction=direction,
                    name=ks
                )
